plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    // info에 git 정보를 추가해줌
    // 버전 관리에 도움이 된다.
    id "com.gorylenko.gradle-git-properties" version "2.4.1" // git info
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // 액츄에이터 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuator 추가
    // 프로메테우스가 마이크로미터를 통해 정보를 수집해가도록 하는 구현체 라이브러리
    // 프로메테우스는 엑츄에이터가 수집하는 정보를 저장하는 디비다.
    // 엑츄에이터는 캡쳐와 같이 실시간 정보만 저장이 가능한데
    // 이를 축적해주는 디비가 프로메테우스다.
    // 액츄에이터에 프로메테우스 엔드포인트가 자동으로 추가 된다.
    // 모든 메트릭이 프로메테우스 포멧에 맞추어 변환된다.
    // 프로메테우스는 . 대신에 _ 포멧을 사용한다.
    // 프로메테우스는 json을 이해하지 못한다.
    // 마이크로미터가 태그 별로 값을 쪼개서 전달
    // 프로메테우스.yml 파일에서 값을 추가해야한다.
    // 수집 주기의 기본 값은 1분이다.
    implementation 'io.micrometer:micrometer-registry-prometheus'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //test lombok 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}
// 스프링 부트 빌드 정보 추가
springBoot {
    buildInfo()
}
